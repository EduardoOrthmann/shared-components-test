{"id":"../node_modules/react-native-gesture-handler/lib/module/handlers/LongPressGestureHandler.js","dependencies":[{"name":"C:\\Projetos\\NextJS\\MyApp\\node_modules\\react-native-gesture-handler\\lib\\module\\handlers\\LongPressGestureHandler.js.map","includedInParent":true,"mtime":1700160788781},{"name":"C:\\Projetos\\NextJS\\MyApp\\web\\package.json","includedInParent":true,"mtime":1700154869415},{"name":"C:\\Projetos\\NextJS\\MyApp\\node_modules\\react-native-gesture-handler\\package.json","includedInParent":true,"mtime":1700160788625},{"name":"./createHandler","loc":{"line":1,"column":26,"index":26},"parent":"C:\\Projetos\\NextJS\\MyApp\\node_modules\\react-native-gesture-handler\\lib\\module\\handlers\\LongPressGestureHandler.js","resolved":"C:\\Projetos\\NextJS\\MyApp\\node_modules\\react-native-gesture-handler\\lib\\module\\handlers\\createHandler.js"},{"name":"./gestureHandlerCommon","loc":{"line":2,"column":40,"index":85},"parent":"C:\\Projetos\\NextJS\\MyApp\\node_modules\\react-native-gesture-handler\\lib\\module\\handlers\\LongPressGestureHandler.js","resolved":"C:\\Projetos\\NextJS\\MyApp\\node_modules\\react-native-gesture-handler\\lib\\module\\handlers\\gestureHandlerCommon.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.longPressHandlerName = exports.longPressGestureHandlerProps = exports.LongPressGestureHandler = void 0;\nvar _createHandler = _interopRequireDefault(require(\"./createHandler\"));\nvar _gestureHandlerCommon = require(\"./gestureHandlerCommon\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst longPressGestureHandlerProps = exports.longPressGestureHandlerProps = ['minDurationMs', 'maxDist'];\nconst longPressHandlerName = exports.longPressHandlerName = 'LongPressGestureHandler';\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\nconst LongPressGestureHandler = exports.LongPressGestureHandler = (0, _createHandler.default)({\n  name: longPressHandlerName,\n  allowedProps: [..._gestureHandlerCommon.baseGestureHandlerProps, ...longPressGestureHandlerProps],\n  config: {\n    shouldCancelWhenOutside: true\n  }\n});"},"sourceMaps":{"js":{"mappings":[{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":4}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":18}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":21}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":43}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":44}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":51}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":4}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":25}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":28}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":35}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":9,"column":0}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":9,"column":9}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":9,"column":32}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":9,"column":35}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":9,"column":46}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":9,"column":49}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":9,"column":53}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":9,"column":56}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":9,"column":57}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":9,"column":67}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":9,"column":70}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":9,"column":73}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":9,"column":78}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":9,"column":85}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":9,"column":87}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":9,"column":90}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":7,"column":7},"generated":{"line":10,"column":0}},{"source":"LongPressGestureHandler.ts","name":"longPressGestureHandlerProps","original":{"line":7,"column":13},"generated":{"line":10,"column":6}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":7,"column":41},"generated":{"line":10,"column":34}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":7,"column":41},"generated":{"line":10,"column":37}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":7,"column":41},"generated":{"line":10,"column":44}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":7,"column":41},"generated":{"line":10,"column":45}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":7,"column":41},"generated":{"line":10,"column":73}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":7,"column":44},"generated":{"line":10,"column":76}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":8,"column":2},"generated":{"line":10,"column":77}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":7,"column":44},"generated":{"line":10,"column":92}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":10,"column":94}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":7,"column":44},"generated":{"line":10,"column":103}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":7,"column":7},"generated":{"line":10,"column":104}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":72,"column":7},"generated":{"line":11,"column":0}},{"source":"LongPressGestureHandler.ts","name":"longPressHandlerName","original":{"line":72,"column":13},"generated":{"line":11,"column":6}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":72,"column":33},"generated":{"line":11,"column":26}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":72,"column":33},"generated":{"line":11,"column":29}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":72,"column":33},"generated":{"line":11,"column":36}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":72,"column":33},"generated":{"line":11,"column":37}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":72,"column":33},"generated":{"line":11,"column":57}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":72,"column":36},"generated":{"line":11,"column":60}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":72,"column":7},"generated":{"line":11,"column":85}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":75,"column":0},"generated":{"line":12,"column":0}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":13,"column":0}},{"source":"LongPressGestureHandler.ts","name":"LongPressGestureHandler","original":{"line":76,"column":13},"generated":{"line":13,"column":6}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":76,"column":36},"generated":{"line":13,"column":29}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":76,"column":36},"generated":{"line":13,"column":32}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":76,"column":36},"generated":{"line":13,"column":39}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":76,"column":36},"generated":{"line":13,"column":40}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":76,"column":36},"generated":{"line":13,"column":63}},{"source":"LongPressGestureHandler.ts","name":"createHandler","original":{"line":76,"column":39},"generated":{"line":13,"column":66}},{"source":"LongPressGestureHandler.ts","name":"createHandler","original":{"line":76,"column":39},"generated":{"line":13,"column":70}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":76,"column":52},"generated":{"line":13,"column":92}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":79,"column":2},"generated":{"line":13,"column":94}},{"source":"LongPressGestureHandler.ts","name":"name","original":{"line":80,"column":2},"generated":{"line":14,"column":2}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":80,"column":6},"generated":{"line":14,"column":6}},{"source":"LongPressGestureHandler.ts","name":"longPressHandlerName","original":{"line":80,"column":8},"generated":{"line":14,"column":8}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":79,"column":2},"generated":{"line":14,"column":28}},{"source":"LongPressGestureHandler.ts","name":"allowedProps","original":{"line":81,"column":2},"generated":{"line":15,"column":2}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":81,"column":14},"generated":{"line":15,"column":14}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":81,"column":16},"generated":{"line":15,"column":16}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":82,"column":4},"generated":{"line":15,"column":17}},{"source":"LongPressGestureHandler.ts","name":"baseGestureHandlerProps","original":{"line":82,"column":7},"generated":{"line":15,"column":20}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":81,"column":16},"generated":{"line":15,"column":65}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":83,"column":4},"generated":{"line":15,"column":67}},{"source":"LongPressGestureHandler.ts","name":"longPressGestureHandlerProps","original":{"line":83,"column":7},"generated":{"line":15,"column":70}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":81,"column":16},"generated":{"line":15,"column":98}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":79,"column":2},"generated":{"line":15,"column":99}},{"source":"LongPressGestureHandler.ts","name":"config","original":{"line":85,"column":2},"generated":{"line":16,"column":2}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":85,"column":8},"generated":{"line":16,"column":8}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":85,"column":10},"generated":{"line":16,"column":10}},{"source":"LongPressGestureHandler.ts","name":"shouldCancelWhenOutside","original":{"line":86,"column":4},"generated":{"line":17,"column":4}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":86,"column":27},"generated":{"line":17,"column":27}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":86,"column":29},"generated":{"line":17,"column":29}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":85,"column":10},"generated":{"line":18,"column":2}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":79,"column":2},"generated":{"line":19,"column":0}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":76,"column":52},"generated":{"line":19,"column":1}},{"source":"LongPressGestureHandler.ts","name":null,"original":{"line":76,"column":7},"generated":{"line":19,"column":2}}],"sources":{"LongPressGestureHandler.ts":"import createHandler from './createHandler';\nimport {\n  BaseGestureHandlerProps,\n  baseGestureHandlerProps,\n} from './gestureHandlerCommon';\n\nexport const longPressGestureHandlerProps = [\n  'minDurationMs',\n  'maxDist',\n] as const;\n\nexport type LongPressGestureHandlerEventPayload = {\n  /**\n   * X coordinate, expressed in points, of the current position of the pointer\n   * (finger or a leading pointer when there are multiple fingers placed)\n   * relative to the view attached to the handler.\n   */\n  x: number;\n\n  /**\n   * Y coordinate, expressed in points, of the current position of the pointer\n   * (finger or a leading pointer when there are multiple fingers placed)\n   * relative to the view attached to the handler.\n   */\n  y: number;\n\n  /**\n   * X coordinate, expressed in points, of the current position of the pointer\n   * (finger or a leading pointer when there are multiple fingers placed)\n   * relative to the window. It is recommended to use `absoluteX` instead of\n   * `x` in cases when the view attached to the handler can be transformed as an\n   * effect of the gesture.\n   */\n  absoluteX: number;\n\n  /**\n   * Y coordinate, expressed in points, of the current position of the pointer\n   * (finger or a leading pointer when there are multiple fingers placed)\n   * relative to the window. It is recommended to use `absoluteY` instead of\n   * `y` in cases when the view attached to the handler can be transformed as an\n   * effect of the gesture.\n   */\n  absoluteY: number;\n\n  /**\n   * Duration of the long press (time since the start of the event), expressed\n   * in milliseconds.\n   */\n  duration: number;\n};\n\nexport interface LongPressGestureConfig {\n  /**\n   * Minimum time, expressed in milliseconds, that a finger must remain pressed on\n   * the corresponding view. The default value is 500.\n   */\n  minDurationMs?: number;\n\n  /**\n   * Maximum distance, expressed in points, that defines how far the finger is\n   * allowed to travel during a long press gesture. If the finger travels\n   * further than the defined distance and the handler hasn't yet activated, it\n   * will fail to recognize the gesture. The default value is 10.\n   */\n  maxDist?: number;\n}\n\nexport interface LongPressGestureHandlerProps\n  extends BaseGestureHandlerProps<LongPressGestureHandlerEventPayload>,\n    LongPressGestureConfig {}\n\nexport const longPressHandlerName = 'LongPressGestureHandler';\n\nexport type LongPressGestureHandler = typeof LongPressGestureHandler;\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\nexport const LongPressGestureHandler = createHandler<\n  LongPressGestureHandlerProps,\n  LongPressGestureHandlerEventPayload\n>({\n  name: longPressHandlerName,\n  allowedProps: [\n    ...baseGestureHandlerProps,\n    ...longPressGestureHandlerProps,\n  ] as const,\n  config: {\n    shouldCancelWhenOutside: true,\n  },\n});\n"},"lineCount":null}},"error":null,"hash":"11275244113cdaeffa75804790561e78","cacheData":{"env":{}}}